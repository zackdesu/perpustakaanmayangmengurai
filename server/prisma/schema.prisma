// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Acc {
  id       String  @id @unique
  name     String
  username String  @unique
  password String
  email    String?
  token    Token?
  role     Role    @default(MEMBER)
  user     User?
  loans    Loan[]
}

model User {
  id           String    @id @unique @default(uuid())
  angkatan     Int
  jurusan      String
  kelas        Int
  absentnum    Int
  NISN         String?
  NIPD         String?
  Tempat       String?
  TanggalLahir DateTime?
  acc          Acc?      @relation(fields: [accId], references: [id])
  accId        String?   @unique
}

model Loan {
  id                Int        @id @default(autoincrement())
  waktuPeminjaman   DateTime   @default(now())
  batasPengembalian DateTime
  waktuKembali      DateTime?
  status            Peminjaman @default(DIPINJAM)
  denda             Int        @default(0)
  bookCode          String
  userId            String
  bookId            String

  user Acc  @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  @@index([userId, bookId])
}

model Book {
  id        String   @id @unique @default(uuid())
  judul     String
  pengarang String
  penerbit  String?
  tahun     String?
  website   String?
  email     String?
  image     String?
  stock     Int      @default(0)
  tag       String?
  type      BookType
  isbn      String?
  loans     Loan[]
}

model Token {
  id           Int    @id @default(autoincrement())
  refreshToken String
  userId       String @unique
  user         Acc    @relation(fields: [userId], references: [id])
}

model OTP {
  id        Int      @id @default(autoincrement())
  email     String
  otp       Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum BookType {
  LITERATUR
  KOMPUTER
  PSIKOLOGI
  FILOSOFI
  SENI
  BAHASA
  SEJARAH
  MATEMATIKA
  SAINS
}

enum Role {
  ADMIN
  MEMBER
}

enum Peminjaman {
  DIPINJAM
  DIKEMBALIKAN
  HILANG
}
